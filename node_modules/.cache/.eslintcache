[{"/Users/camintosh2/Projects/pomodoro-timer/src/index.js":"1","/Users/camintosh2/Projects/pomodoro-timer/src/reportWebVitals.js":"2","/Users/camintosh2/Projects/pomodoro-timer/src/App.js":"3","/Users/camintosh2/Projects/pomodoro-timer/src/Timer.js":"4","/Users/camintosh2/Projects/pomodoro-timer/src/PlayButton.js":"5","/Users/camintosh2/Projects/pomodoro-timer/src/PauseButton.js":"6","/Users/camintosh2/Projects/pomodoro-timer/src/SettingsButton.js":"7","/Users/camintosh2/Projects/pomodoro-timer/src/Settings.js":"8","/Users/camintosh2/Projects/pomodoro-timer/src/SettingsContext.js":"9","/Users/camintosh2/Projects/pomodoro-timer/src/BackButton.js":"10","/Users/camintosh2/Projects/pomodoro-timer/src/MoveBack.js":"11"},{"size":500,"mtime":1632625764819,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1632625764821,"results":"14","hashOfConfig":"13"},{"size":689,"mtime":1632708063772,"results":"15","hashOfConfig":"13"},{"size":3084,"mtime":1632708063772,"results":"16","hashOfConfig":"13"},{"size":426,"mtime":1632628372760,"results":"17","hashOfConfig":"13"},{"size":438,"mtime":1632628860256,"results":"18","hashOfConfig":"13"},{"size":882,"mtime":1632630256791,"results":"19","hashOfConfig":"13"},{"size":1453,"mtime":1632651410240,"results":"20","hashOfConfig":"13"},{"size":109,"mtime":1632635103876,"results":"21","hashOfConfig":"13"},{"size":517,"mtime":1632635827041,"results":"22","hashOfConfig":"13"},{"size":512,"mtime":1632652487876,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18ovcu2",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/camintosh2/Projects/pomodoro-timer/src/index.js",[],["48","49"],"/Users/camintosh2/Projects/pomodoro-timer/src/reportWebVitals.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/App.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/Timer.js",["50","51"],"import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport PlayButton from './PlayButton';\nimport PauseButton from './PauseButton';\nimport SettingsButton from './SettingsButton';\nimport { useContext, useState, useEffect, useRef } from 'react';\nimport SettingsContext from './SettingsContext';\nimport MoveBack from './MoveBack';\n\n<MoveBack />;\n<custom-shape-divider-top-1632652121/>\n\nconst red = '#f54e4e';\nconst green = '#4aec8c';\n\nfunction Timer() {\n    const settingsInfo = useContext(SettingsContext);\n\n    const [isPaused, setIsPaused] = useState(false);\n    const [mode, setMode] = useState('work'); //work/break/null\n    const [secondsLeft, setSecondsLeft ] = useState(0);\n\n    const secondsLeftRef = useRef(secondsLeft);\n    const isPausedRef = useRef(isPaused);\n    const modeRef = useRef(mode);\n\n    function tick() {\n        secondsLeftRef.current--;\n        setSecondsLeft(secondsLeftRef.current);\n    }\n\n    useEffect(() => {\n\n        function switchMode() {\n            const nextMode = modeRef.current === 'work' ? 'break' : 'work';\n            const nextSeconds = (nextMode === 'work' ? settingsInfo.workMinutes : settingsInfo.breakMinutes) * 60;\n            \n            setMode(nextMode);\n            modeRef.current = nextMode;\n\n            setSecondsLeft(nextSeconds);\n            secondsLeftRef.current = nextSeconds;\n        }\n\n        secondsLeftRef.current = settingsInfo.workMinutes * 60;\n        setSecondsLeft(secondsLeftRef.current);\n\n        const interval = setInterval(() => {\n            if (isPausedRef.current) {\n              return;\n            }\n            if (secondsLeftRef.current === 0) {\n              return switchMode();\n            }\n      \n            tick();\n          },1000);\n        \n        return () => clearInterval(interval);\n    }, [settingsInfo]);\n\n    const totalSeconds = mode === 'work' \n        ? settingsInfo.workMinutes * 60 \n        : settingsInfo.breakMinutes * 60;\n    const percentage = Math.round(secondsLeft / totalSeconds * 100);\n\n    const minutes = Math.floor(secondsLeft / 60); //math.floor because if result is 44.8... want 44 min\n    let seconds = secondsLeft % 60;\n    if(seconds < 10 ) seconds = '0'+seconds;\n\n    return (\n\n    <div>\n        <CircularProgressbar\n        value={percentage} \n        text={minutes + ':' + seconds}//{percentage+`%`}\n        styles={buildStyles({\n            textColor:'rgba(255,255,255,0.8)',\n            pathColor:mode === 'work' ? 'var(--red)' : 'var(--green)',\n            tailColor:'rgba(255,255,255,.2)',\n        })}/>\n        <div style={{marginTop:'20px'}}>\n            {isPaused \n            ? <PlayButton onClick={() => { setIsPaused(false); isPausedRef.current = false; }} /> \n            : <PauseButton onClick={() => { setIsPaused(true); isPausedRef.current = true; }} />}\n            </div>\n            <div style={{marginTop:'20px'}}>\n                <SettingsButton onClick={() => settingsInfo.setShowSettings(true)} />\n            </div>\n    </div>\n    );\n}\n\nexport default Timer;","/Users/camintosh2/Projects/pomodoro-timer/src/PlayButton.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/PauseButton.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/SettingsButton.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/Settings.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/SettingsContext.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/BackButton.js",[],"/Users/camintosh2/Projects/pomodoro-timer/src/MoveBack.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":13,"column":7,"nodeType":"58","messageId":"59","endLine":13,"endColumn":10},{"ruleId":"56","severity":1,"message":"60","line":14,"column":7,"nodeType":"58","messageId":"59","endLine":14,"endColumn":12},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'red' is assigned a value but never used.","Identifier","unusedVar","'green' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]